# Kubernetes Secrets Template for BookingBridge
# Note: This is a template - actual secrets should be created via secure methods

apiVersion: v1
kind: Secret
metadata:
  name: bookingbridge-secrets
  namespace: bookingbridge
  labels:
    app.kubernetes.io/name: bookingbridge
    app.kubernetes.io/component: secrets
type: Opaque
stringData:
  # Database Credentials
  DATABASE_URL: "postgresql://USER:PASSWORD@bookingbridge-postgresql:5432/bookingbridge"
  POSTGRES_USER: "bookingbridge"
  POSTGRES_PASSWORD: "REPLACE_WITH_STRONG_PASSWORD"
  POSTGRES_DB: "bookingbridge"
  
  # Redis Credentials
  REDIS_URL: "redis://:PASSWORD@bookingbridge-redis:6379/0"
  REDIS_PASSWORD: "REPLACE_WITH_STRONG_PASSWORD"
  
  # JWT Keys (should be generated securely)
  SECRET_KEY: "REPLACE_WITH_STRONG_SECRET_KEY"
  JWT_PRIVATE_KEY: |
    -----BEGIN RSA PRIVATE KEY-----
    REPLACE_WITH_ACTUAL_PRIVATE_KEY
    -----END RSA PRIVATE KEY-----
  JWT_PUBLIC_KEY: |
    -----BEGIN PUBLIC KEY-----
    REPLACE_WITH_ACTUAL_PUBLIC_KEY
    -----END PUBLIC KEY-----
  
  # Privacy and Security
  HASH_SALT: "REPLACE_WITH_STRONG_SALT"
  ENCRYPTION_KEY: "REPLACE_WITH_ENCRYPTION_KEY"
  
  # External API Keys
  FACEBOOK_APP_ID: "YOUR_FACEBOOK_APP_ID"
  FACEBOOK_APP_SECRET: "YOUR_FACEBOOK_APP_SECRET"
  GOOGLE_ADS_CLIENT_ID: "YOUR_GOOGLE_ADS_CLIENT_ID"
  GOOGLE_ADS_CLIENT_SECRET: "YOUR_GOOGLE_ADS_CLIENT_SECRET"
  GOOGLE_ADS_DEVELOPER_TOKEN: "YOUR_GOOGLE_ADS_DEVELOPER_TOKEN"
  GOOGLE_ADS_REFRESH_TOKEN: "YOUR_GOOGLE_ADS_REFRESH_TOKEN"
  
  # Communication Services
  SENDGRID_API_KEY: "YOUR_SENDGRID_API_KEY"
  TWILIO_ACCOUNT_SID: "YOUR_TWILIO_ACCOUNT_SID"
  TWILIO_AUTH_TOKEN: "YOUR_TWILIO_AUTH_TOKEN"
  
  # Monitoring
  SENTRY_DSN: "YOUR_SENTRY_DSN"
  
---
# TLS Secret for HTTPS
apiVersion: v1
kind: Secret
metadata:
  name: bookingbridge-tls
  namespace: bookingbridge
  labels:
    app.kubernetes.io/name: bookingbridge
    app.kubernetes.io/component: tls
type: kubernetes.io/tls
data:
  # Base64 encoded certificate and key
  tls.crt: LS0tLS1CRUdJTi... # Replace with actual base64 encoded certificate
  tls.key: LS0tLS1CRUdJTi... # Replace with actual base64 encoded private key

---
# Registry Secret for Private Docker Images (if needed)
apiVersion: v1
kind: Secret
metadata:
  name: registry-secret
  namespace: bookingbridge
  labels:
    app.kubernetes.io/name: bookingbridge
    app.kubernetes.io/component: registry
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6... # Replace with actual Docker registry credentials