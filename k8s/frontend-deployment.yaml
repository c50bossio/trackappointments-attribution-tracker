# Frontend Deployment for BookingBridge
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bookingbridge-frontend
  namespace: bookingbridge
  labels:
    app.kubernetes.io/name: bookingbridge-frontend
    app.kubernetes.io/instance: production
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: attribution-tracker
    app.kubernetes.io/managed-by: kubectl
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: bookingbridge-frontend
      app.kubernetes.io/instance: production
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bookingbridge-frontend
        app.kubernetes.io/instance: production
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/component: frontend
        app.kubernetes.io/part-of: attribution-tracker
    spec:
      # Security Context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      
      # Image Pull Secrets (if using private registry)
      imagePullSecrets:
      - name: registry-secret
      
      containers:
      - name: frontend
        image: bookingbridge/frontend:latest
        imagePullPolicy: Always
        
        # Security Context
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        
        # Environment Variables from ConfigMap
        envFrom:
        - configMapRef:
            name: bookingbridge-config
        
        # Environment Variables
        env:
        - name: NEXT_PUBLIC_API_URL
          value: "https://bookingbridge.com/api"
        - name: HOSTNAME
          value: "0.0.0.0"
        
        # Resource Limits
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1Gi
        
        # Health Checks
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        
        # Startup Probe
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        
        # Volume Mounts for temporary files
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: nextjs-cache
          mountPath: /app/.next/cache
      
      volumes:
      - name: tmp
        emptyDir: {}
      - name: nextjs-cache
        emptyDir: {}
      
      # Pod Anti-Affinity for High Availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - bookingbridge-frontend
              topologyKey: kubernetes.io/hostname
      
      # Tolerations for node scheduling
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300

---
# Frontend Service
apiVersion: v1
kind: Service
metadata:
  name: bookingbridge-frontend
  namespace: bookingbridge
  labels:
    app.kubernetes.io/name: bookingbridge-frontend
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: frontend
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: bookingbridge-frontend
    app.kubernetes.io/instance: production

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: bookingbridge-frontend-hpa
  namespace: bookingbridge
  labels:
    app.kubernetes.io/name: bookingbridge-frontend
    app.kubernetes.io/component: autoscaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: bookingbridge-frontend
  minReplicas: 2
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60

---
# Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: bookingbridge-frontend-pdb
  namespace: bookingbridge
  labels:
    app.kubernetes.io/name: bookingbridge-frontend
    app.kubernetes.io/component: availability
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: bookingbridge-frontend
      app.kubernetes.io/instance: production