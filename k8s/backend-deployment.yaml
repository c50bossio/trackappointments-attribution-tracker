# Backend Deployment for BookingBridge
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bookingbridge-backend
  namespace: bookingbridge
  labels:
    app.kubernetes.io/name: bookingbridge-backend
    app.kubernetes.io/instance: production
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: attribution-tracker
    app.kubernetes.io/managed-by: kubectl
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: bookingbridge-backend
      app.kubernetes.io/instance: production
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bookingbridge-backend
        app.kubernetes.io/instance: production
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/component: backend
        app.kubernetes.io/part-of: attribution-tracker
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      # Security Context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      
      # Image Pull Secrets (if using private registry)
      imagePullSecrets:
      - name: registry-secret
      
      # Init Container for Database Migration
      initContainers:
      - name: db-migration
        image: bookingbridge/backend:latest
        command: ["alembic", "upgrade", "head"]
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: bookingbridge-secrets
              key: DATABASE_URL
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
      
      containers:
      - name: backend
        image: bookingbridge/backend:latest
        imagePullPolicy: Always
        
        # Security Context
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        
        # Environment Variables from ConfigMap
        envFrom:
        - configMapRef:
            name: bookingbridge-config
        
        # Environment Variables from Secrets
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: bookingbridge-secrets
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: bookingbridge-secrets
              key: REDIS_URL
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: bookingbridge-secrets
              key: SECRET_KEY
        - name: JWT_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              name: bookingbridge-secrets
              key: JWT_PRIVATE_KEY
        - name: JWT_PUBLIC_KEY
          valueFrom:
            secretKeyRef:
              name: bookingbridge-secrets
              key: JWT_PUBLIC_KEY
        - name: HASH_SALT
          valueFrom:
            secretKeyRef:
              name: bookingbridge-secrets
              key: HASH_SALT
        - name: FACEBOOK_APP_SECRET
          valueFrom:
            secretKeyRef:
              name: bookingbridge-secrets
              key: FACEBOOK_APP_SECRET
        - name: GOOGLE_ADS_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: bookingbridge-secrets
              key: GOOGLE_ADS_CLIENT_SECRET
        - name: SENDGRID_API_KEY
          valueFrom:
            secretKeyRef:
              name: bookingbridge-secrets
              key: SENDGRID_API_KEY
        
        # Resource Limits
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1000m
            memory: 2Gi
        
        # Health Checks
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        
        # Startup Probe for slower startup
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        
        # Volume Mounts for temporary files
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /app/logs
      
      volumes:
      - name: tmp
        emptyDir: {}
      - name: logs
        emptyDir: {}
      
      # Pod Anti-Affinity for High Availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - bookingbridge-backend
              topologyKey: kubernetes.io/hostname
      
      # Tolerations for node scheduling
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300

---
# Backend Service
apiVersion: v1
kind: Service
metadata:
  name: bookingbridge-backend
  namespace: bookingbridge
  labels:
    app.kubernetes.io/name: bookingbridge-backend
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: backend
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: bookingbridge-backend
    app.kubernetes.io/instance: production

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: bookingbridge-backend-hpa
  namespace: bookingbridge
  labels:
    app.kubernetes.io/name: bookingbridge-backend
    app.kubernetes.io/component: autoscaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: bookingbridge-backend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60

---
# Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: bookingbridge-backend-pdb
  namespace: bookingbridge
  labels:
    app.kubernetes.io/name: bookingbridge-backend
    app.kubernetes.io/component: availability
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: bookingbridge-backend
      app.kubernetes.io/instance: production